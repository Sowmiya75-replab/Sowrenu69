#include<stdio.h>

#include<conio.h>

void main()

{

int n,r,i,j,k,p,u=0,s=0,m;

int block[10],run[10],active[10],newreq[10];

int max[10][10],resalloc[10][10],resreq[10][10];

int totalloc[10],totext[10],simalloc[10];

clrscr();

printf("Enter the no of processes:");

scanf("%d",&n);

printf("Enter the no of resource classes:");

scanf("%d",&r);

printf("Enter the total existed resource in each class:");

for(k=1;k<=r;k++)

scanf("%d",&totext[k]);

printf("Enter the allocated resources:");

for(i=1;i<=n;i++)

for(k=1;k<=r;k++)

scanf("%d",&resalloc);

printf("Enter the process making the new request:");

scanf("%d",&p);

printf("Enter the requested resource:");

for(k=1;k<=r;k++)

scanf("%d",&newreq[k]);

printf("Enter the process which are n blocked or running:");

for(i=1;i<=n;i++)

{

if(i!=p)

{

printf("process %d:\n",i+1);
{
j=0;
for(k=1;k<=r;k++)
{
if((totext[k]-simalloc[k])<(max[i][k]-resalloc[i][k]))
{
J=1;break;
}}}
If(j==0)
{
active[i]=0;
for(k=1;k<=r;k++)
simalloc[k]=resalloc[i][k];
} }
m=0;
for(k=1;k<=r;k++)
resreq[p][k]=newreq[k];
printf("Deadlock willn't occur");
}
Else
{
for(k=1;k<=r;k++)
{
resalloc[p][k]=newreq[k];
43
totalloc[k]=newreq[k];
}
printf("Deadlock will occur");
}
getch();
}
{
j=0;
for(k=1;k<=r;k++)
{
if((totext[k]-simalloc[k])<(max[i][k]-resalloc[i][k]))
{
J=1;break;
}}}
If(j==0)
{
active[i]=0;
for(k=1;k<=r;k++)
simalloc[k]=resalloc[i][k];
} }
m=0;
for(k=1;k<=r;k++)
resreq[p][k]=newreq[k];
printf("Deadlock willn't occur");
}
Else
{
for(k=1;k<=r;k++)
{
resalloc[p][k]=newreq[k];
43
totalloc[k]=newreq[k];
}
printf("Deadlock will occur");
}
getch();
}
